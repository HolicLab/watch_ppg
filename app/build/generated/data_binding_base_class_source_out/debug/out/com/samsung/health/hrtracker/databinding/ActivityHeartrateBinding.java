// Generated by view binder compiler. Do not edit!
package com.samsung.health.hrtracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.wear.widget.BoxInsetLayout;
import com.samsung.health.hrtracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHeartrateBinding implements ViewBinding {
  @NonNull
  private final BoxInsetLayout rootView;

  @NonNull
  public final BoxInsetLayout boxLayout;

  @NonNull
  public final Button butStart;

  @NonNull
  public final ConstraintLayout consLayout;

  @NonNull
  public final LinearLayout layHeader;

  @NonNull
  public final LinearLayout layHeartRateStatus;

  @NonNull
  public final LinearLayout layPpgGreen;

  @NonNull
  public final ProgressBar pgMeasurement;

  @NonNull
  public final TextView txtHeartRateBPMName;

  @NonNull
  public final TextView txtHeartRateStatusName;

  @NonNull
  public final TextView txtPpgGreenStatusValue;

  @NonNull
  public final TextView txtPpgGreenValue;

  @NonNull
  public final TextView txtTitle;

  private ActivityHeartrateBinding(@NonNull BoxInsetLayout rootView,
      @NonNull BoxInsetLayout boxLayout, @NonNull Button butStart,
      @NonNull ConstraintLayout consLayout, @NonNull LinearLayout layHeader,
      @NonNull LinearLayout layHeartRateStatus, @NonNull LinearLayout layPpgGreen,
      @NonNull ProgressBar pgMeasurement, @NonNull TextView txtHeartRateBPMName,
      @NonNull TextView txtHeartRateStatusName, @NonNull TextView txtPpgGreenStatusValue,
      @NonNull TextView txtPpgGreenValue, @NonNull TextView txtTitle) {
    this.rootView = rootView;
    this.boxLayout = boxLayout;
    this.butStart = butStart;
    this.consLayout = consLayout;
    this.layHeader = layHeader;
    this.layHeartRateStatus = layHeartRateStatus;
    this.layPpgGreen = layPpgGreen;
    this.pgMeasurement = pgMeasurement;
    this.txtHeartRateBPMName = txtHeartRateBPMName;
    this.txtHeartRateStatusName = txtHeartRateStatusName;
    this.txtPpgGreenStatusValue = txtPpgGreenStatusValue;
    this.txtPpgGreenValue = txtPpgGreenValue;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public BoxInsetLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHeartrateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHeartrateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_heartrate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHeartrateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      BoxInsetLayout boxLayout = (BoxInsetLayout) rootView;

      id = R.id.butStart;
      Button butStart = ViewBindings.findChildViewById(rootView, id);
      if (butStart == null) {
        break missingId;
      }

      id = R.id.consLayout;
      ConstraintLayout consLayout = ViewBindings.findChildViewById(rootView, id);
      if (consLayout == null) {
        break missingId;
      }

      id = R.id.layHeader;
      LinearLayout layHeader = ViewBindings.findChildViewById(rootView, id);
      if (layHeader == null) {
        break missingId;
      }

      id = R.id.layHeartRateStatus;
      LinearLayout layHeartRateStatus = ViewBindings.findChildViewById(rootView, id);
      if (layHeartRateStatus == null) {
        break missingId;
      }

      id = R.id.layPpgGreen;
      LinearLayout layPpgGreen = ViewBindings.findChildViewById(rootView, id);
      if (layPpgGreen == null) {
        break missingId;
      }

      id = R.id.pgMeasurement;
      ProgressBar pgMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (pgMeasurement == null) {
        break missingId;
      }

      id = R.id.txtHeartRateBPMName;
      TextView txtHeartRateBPMName = ViewBindings.findChildViewById(rootView, id);
      if (txtHeartRateBPMName == null) {
        break missingId;
      }

      id = R.id.txtHeartRateStatusName;
      TextView txtHeartRateStatusName = ViewBindings.findChildViewById(rootView, id);
      if (txtHeartRateStatusName == null) {
        break missingId;
      }

      id = R.id.txtPpgGreenStatusValue;
      TextView txtPpgGreenStatusValue = ViewBindings.findChildViewById(rootView, id);
      if (txtPpgGreenStatusValue == null) {
        break missingId;
      }

      id = R.id.txtPpgGreenValue;
      TextView txtPpgGreenValue = ViewBindings.findChildViewById(rootView, id);
      if (txtPpgGreenValue == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new ActivityHeartrateBinding((BoxInsetLayout) rootView, boxLayout, butStart,
          consLayout, layHeader, layHeartRateStatus, layPpgGreen, pgMeasurement,
          txtHeartRateBPMName, txtHeartRateStatusName, txtPpgGreenStatusValue, txtPpgGreenValue,
          txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
